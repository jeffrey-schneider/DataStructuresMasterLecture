
package KWHashMap;

/**
 *
 * @author JCSchneider
 */
public class HashTableOpenTest {
    public static void main(String[] args) {
        HashTableOpen<Integer, Integer> hash = new HashTableOpen<>(3);
        hash.put(0,0);
        //System.out.println("Load Factor: " + hash.getLoadFactor());
        hash.put(1,100);
        hash.put(2,200);
        hash.put(3,300);
        //System.out.println("Load Factor: " + hash.getLoadFactor());
        hash.put(4,400);
        hash.put(5,400);
        hash.put(6,400);
        hash.put(7,400);
        
        for (int i = 0; i < 6; i++) {
            System.out.println(hash.get(i) + " " );            
        }
        
        System.out.println("Is hash empty? " + hash.isEmpty());
        System.out.println("hash.hashCode()" + hash.hashCode());
        //System.out.println("Load Factor: " + hash.getLoadFactor());
        //Contains key
        System.out.println("Contains key: 7 " + hash.containsKey(7));
        System.out.println("Contains value: 400: " + hash.containsValue(400));
        
        System.out.println("Remove key 7: ");
        hash.remove(7);
        System.out.println("Contains key: 7 " + hash.containsKey(7));
        
        hash.replace(6, 400, 5000);
        hash.replace(0, hash.get(0), 50444);
        
        for (int i = 0; i < 7; i++) {
            System.out.println(hash.get(i) + " " );            
        }
    }
}
